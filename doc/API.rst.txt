RST references
  - https://github.com/ralsina/rst-cheatsheet/blob/master/rst-cheatsheet.rst
  - https://gist.github.com/dupuy/1855764
TODO
  - Test RFF in sumSimUtility_
    
    - Summing over GALFIT, what about Source Extractor radius? What if the sex.param doesn't have FLUX_RADIUS?
      Should we make that required like X_IMAGE and Y_IMAGE?
  - Sigma Images for simUtility_
  
    - High resolution, using sqrt now, should be same as GALFIT generated, could be ones.fits?
  - Required Files Directory for simUtility_
  
    - Do we need to have a user populated folder at all?
    - sex.conv and default.nnw can be generated, where to save them?
    - sex.param can be generated or specified on the command line
    - config.sex can be generated or specified on the command line
    - one or the other, not both because the config.sex points to the sex.param (PARAMETERS_NAME)
  - Source Extractor in simUtility_
  
    - values for candelized and high resolution: min area, 
      threshold (detect, deblend, and analysis), min contrast, clean bool and param
    - number of galaxies, identifying clumps as separate
    - dynamically changing values to work for different time periods/clumpyness/brightness?
  - Barro plot in plotSimUtility_
  - High Res Vivian plots in plotSimUtility_
  - Bulge/Total in plotSimUtility_
  
    - Can we make this a column of the csv in sumSimUtility_ (-99)

Instructions for Modeling Pipeline
=================
:Authors:
  | Ian Tibbetts '15
  | Jianing Yang '18
  | Ryan Cole '15
  | Elizabeth McGrath
:Version: 
  1.0 as of 4/14/2015
:Acknowledgments:
  | Colby College Astrophysics
  | Joel Primack
  | Greg Snyder
This is a procedure for analyzing real and simulated galaxies using Source Extractor and GALFIT automatically.
The pipeline involves `Preprocessing`_, `Modeling`_, `Summarizing`_, then `Plotting`_.

Preprocessing
=======================
This is only necessary to do when starting to analyze new data, for example a set of images in a folder called 
``/diskarrays/astro_array1/hydroart/``. Be sure to modify the code of the files referenced here to correctly work
for the file naming scheme of your data, or modify the filenames to conform to the expectations of this code.

Duplicate data before modifying
  - If you have enough disk space it is a good idea to first make a new directory and duplicate your data
  - ``mkdir /diskarrays/astro_array1/hydroartMod/``
  - ``cp -r /diskarrays/astro_array1/hydroart/* /diskarrays/astro_array1/hydroartMod/``
Update the fits headers
  - Check the sum_galfit method of sumSimUtility_ to determine what info is expected in the fits header
  
    - SCALESIM is only for converting distances in high resolution images to kpc
    - REDSHIFT, MASS, SFR, and SSFR will be set to 0 in summary if not present in header
    - GALAXYID, HALOID, AVAL, FILTER, and CAMERA will be parsed from the filename if not present in header
    - If the filename is not in the expected format, these will be either 0.0 or empty string in the summary
  - Modify updateHeader_ to populate any missing fields (clobber=True to overrwrite)
Generate sigma images
  - Use genSigmaImages_ to create sigma images for each of the images in your data
  - If the GALFIT generated data is good enough, skip this and GALFIT will output the generated sigma images
    and include each of them in the results of simUtility_

Modeling
=======================
Make lists of images
  - Using ``echo`` and piping into ``xargs ls`` (below) prevents the overflow that can occur when using ``ls`` alone.
  - ``echo /diskarrays/astro_array1/hydroartMod/VELA[01][2345]*/*.[^01]*/images/*F160W*_noise.fits | xargs ls > 160noiseImages.txt``
  - If regular expressions become too much work, the ``>>`` (below) can be used to repeatedly append convenient chunks of images.
  - ``echo /diskarrays/astro_array1/hydroartMod/VELA2[678]*/*.[^01]*/images/*F160W*_noise.fits | xargs ls >> 160noiseImages.txt``
Run simUtility_
  - Create a directory ``requiredFiles`` and put in the files ``default.nnw``, ``ones.fits``, ``sex.conv``, and ``sex.param`` inside
  - Navigate to the directory containing the ``requiredFiles`` directory, eg. ``cd /diskarrays/astro_array1/imtibbet/run/``
  - Use the ``screen`` command to make a new terminal session that can later be sent to the background
  - Run the modeling program
  
    - Candelized
        ``python /diskarrays/astro_array1/imtibbet/McGrathResearch/src/simUtility.py 160noiseImages.txt -r -p --psf psf/gs_wide_f160w_v0.5_psf.fits``
    - Simulation
        ``python /diskarrays/astro_array1/imtibbet/McGrathResearch/src/simUtility.py 160simImages.txt -b -p`` 
    - Send the command line output to stdout.txt by adding ``> stdout.txt`` to the end of either 
      so it can be searched later (e.g. ``grep -i warning stdout.txt``)
    - For high resolution and/or many images, the ``-p`` flag is recommended to reduce runtime 
      but causes multithreading that is hard to cancel/abort and requires manual cleanup using the ``kill`` command
  - Ctrl a, d to detatch from screen, ``screen -r`` to resume
  - To see progress, either use ``top`` or ``ps -ef`` (running processes) or ``ls _*/*single*param* | wc -l`` (number of images processed so far)
  -h                    show this help message and exit
  -b                    include to run a GALFIT bulge fit after the initial galaxy fit
  -g                    include to suppress running galfit after Source-Extractor
  -p                    include to run images in parallel, otherwise series
  -r                    include to run Source-Extractor for real images, otherwise sim images assumed
  --mpz=MPZ
                        set the magnitude photometric zeropoint for GALFIT to
                        use [default: 26.23]
  --plate=Plate         set the plate scale for GALFIT to use[default: 0.06]
  --psf=PSF             set the file for GALFIT to use as a PSF

Summarizing
=======================
Make lists of results
  - ``echo /diskarrays/astro_array1/imtibbet/results/resultsNoiseMRP/results/*single*multi* | xargs ls > singleMultiFits.txt``
Run sumSimUtility_
  - ``python McGrathResearch/src/sumSimUtility.py results/resultsNoiseMRP/singleMultiFits.txt -d , -r -o summaries/summaryNoise.csv``
  -h                    show this help message and exit
  -b                   if running on results of GALFIT bulge (two component)
                        fit
  -d DELIM
                        set the delimiter to separate the fields of the
                        summary file [default:  ]
  -r                    if running on candelized images
  -o OUTPUT
                        set the filename to write the output summary file
                        [default: summary_04-14-2015.csv]
  -v                    to enable command line printouts of state

Plotting
=======================
Run plotSimUtility_
  - ``python plotSimUtility ../summaries/summaryNoise.csv -d , -r -p vivian -x age -y ser``
  -h                    show this help message and exit
  -m                    to plot MRP counterparts adjacent
  -r                    to indicate candelized results are being plotted
  -n                    the space separated list of galaxy names to be plotted
                        (must exist in summary file). The default is all
                        unique galaxy ids plotted separately
  -y YFIELDNAMES        the space separated list of y field names to be
                        plotted, available options are: ['age', 'red', 'px',
                        'epx', 'py', 'epy', 'mag', 'emag', 'rpix', 'erpix',
                        'rad', 'erad', 'ser', 'eser', 'ba', 'eba', 'pa',
                        'epa', 'rff'], default: ser
  -x XFIELDNAME
                        the field name of the x values, available options are:
                        ['age', 'red', 'px', 'epx', 'py', 'epy', 'mag',
                        'emag', 'rpix', 'erpix', 'rad', 'erad', 'ser', 'eser',
                        'ba', 'eba', 'pa', 'epa', 'rff'], default: red
  -t COMPTYPE
                        the type of component to be plotted (central, bulge,
                        disk), default: central
  -p PLOTTYPE
                        the type of plot, available options are: ['default',
                        'allGalaxies', 'allFields', 'bulgeToTotal', 'mozena',
                        'barro', 'special', 'vivian'], default: default
  -c CAMERAS
                        specify specific cameras (e.g. 0 or 1 or... or all)
  -d DELIMITER
                        specify delimiter of data summary file, default
                        whitespace


.. _simUtility: https://github.com/imtibbet/McGrathResearch/blob/master/src/simUtility.py/
.. _sumSimUtility: https://github.com/imtibbet/McGrathResearch/blob/master/src/simUtility.py/
.. _plotSimUtility: https://github.com/imtibbet/McGrathResearch/blob/master/src/simUtility.py/
.. _updateHeader: https://github.com/imtibbet/McGrathResearch/blob/master/src/updateHeader.py/
.. _genSigmaImages: https://github.com/imtibbet/McGrathResearch/blob/master/src/genSigmaImages.py/
